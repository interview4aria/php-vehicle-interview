diff --git a/src/Controller/UiController.php b/src/Controller/UiController.php
index cff9bb9..376a7ef 100644
--- a/src/Controller/UiController.php
+++ b/src/Controller/UiController.php
@@ -9,6 +9,8 @@ use Symfony\Component\Routing\Annotation\Route;
 use Symfony\Bridge\Doctrine\Form\Type\EntityType;
 use Symfony\Component\Form\Extension\Core\Type\TextType;
 use Symfony\Component\Form\Extension\Core\Type\EmailType;
+use Symfony\Component\Form\Extension\Core\Type\NumberType;
+use Symfony\Component\Form\Extension\Core\Type\ChoiceType;
 use Symfony\Component\Form\Extension\Core\Type\SubmitType;
 use Symfony\Component\Form\Extension\Core\Type\TextareaType;
 use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
@@ -57,5 +59,45 @@ class UiController extends AbstractController
         ]);
     }

-    /** */
+    /**
+     * @Route("/admin/vehicle/create", name="create_vehicle", methods={"GET", "POST"})
+     */
+    public function createVehicle(Request $request)
+    {
+        $entityManager = $this->getDoctrine()->getManager();
+        $vehicle = new Vehicle();
+
+        $form = $this->createFormBuilder($vehicle)
+            ->add('name', TextType::class)
+            ->add('description', TextareaType::class)
+            ->add('color', TextType::class, [
+                'required' => false
+            ])
+            ->add('price', NumberType::class, [
+                'required' => false
+            ])
+            ->add('type', ChoiceType::class, [
+                'choices' => [
+                    'Boat' => 'boat',
+                    'Car' => 'car',
+                    'Plane' => 'plane',
+                ]
+            ])
+            ->add('send', SubmitType::class)
+            ->getForm();
+
+            $form->handleRequest($request);
+            if ($form->isSubmitted() && $form->isValid()) {
+                $vehicle = $form->getData();
+
+                $entityManager->persist($vehicle);
+                $entityManager->flush();
+
+                return $this->render('create_success.html.twig');
+            }
+
+            return $this->render('create.html.twig', [
+                'form' => $form->createView()
+            ]);
+    }
 }
\ No newline at end of file
diff --git a/templates/create.html.twig b/templates/create.html.twig
new file mode 100644
index 0000000..9fd9da3
--- /dev/null
+++ b/templates/create.html.twig
@@ -0,0 +1,7 @@
+{% extends 'base.html.twig' %}
+
+{% block body %}
+ {{ form_start(form, {'action': path('create_vehicle'), 'method': 'POST'}) }}
+    {{ form_widget(form) }}
+ {{ form_end(form) }}
+{% endblock %}
diff --git a/templates/create_success.html.twig b/templates/create_success.html.twig
new file mode 100644
index 0000000..b4a37a3
--- /dev/null
+++ b/templates/create_success.html.twig
@@ -0,0 +1,5 @@
+{% extends 'base.html.twig' %}
+
+{% block body %}
+    <p>You have successfully created a vehicle. <a href="{{ path('home') }}">See all vehicles</a>.
+{% endblock %}